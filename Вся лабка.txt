#include <iostream>

using namespace std;

int main() {

    int canvas[100][100] = {};

    int w, h;
    cin >> w >> h;

    int n;
    cin >> n;

    int paintedCnt = 0;

    while(n > 0) {
        int x1, y1, x2, y2;
        cin >> x1 >> y1 >> x2 >> y2;

        for(int i = y1; i < y2; ++i) {
            for(int j = x1; j < x2; ++j) {
                if(canvas[i][j] == 0) {
                    canvas[i][j] = 1;
                    ++paintedCnt;
                }
            }
        }
        
        --n;
    }

    cout << w * h - paintedCnt << endl;

    return 0;
}


#include <iostream>
#include <vector>
using namespace std;

int main() {
    int rows, cols, num_mines;
    cin >> rows >> cols;
    cin >> num_mines;

    vector<vector<char>> field(rows, vector<char>(cols, '.'));
    vector<pair<int, int>> mines(num_mines);

    for (int i = 0; i < num_mines; i++) {
        int x, y;
        cin >> x >> y;
        mines[i] = {x, y};
        field[x][y] = '*';
    }

    int dx[] = {-1, -1, -1, 0, 0, 1, 1, 1};
    int dy[] = {-1, 0, 1, -1, 1, -1, 0, 1};

    for (int i = 0; i < num_mines; i++) {
        int x = mines[i].first;
        int y = mines[i].second;

        for (int d = 0; d < 8; d++) {
            int nx = x + dx[d];
            int ny = y + dy[d];

            if (nx >= 0 && ny >= 0 && nx < rows && ny < cols && field[nx][ny] != '*') {
                if (field[nx][ny] == '.') {
                    field[nx][ny] = '1';
                } else {
                    field[nx][ny]++;
                }
            }
        }
    }

    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cout << field[i][j];
            if (j < cols - 1) cout << " ";
        }
        cout << endl;
    }

    return 0;
}

#include <iostream>
#include <vector>
using namespace std;

int main() {
    int N;
    cin >> N;

    vector<vector<int>> table(N, vector<int>(N, 0));

    for (int j = 0; j < N; j++) {
        table[0][j] = j;
    }

    for (int i = 1; i < N; i++) {
        table[i][0] = i;
        table[i][i] = i * i;
    }

    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            cout << table[i][j];
            if (j < N - 1) cout << " ";
        }
        cout << endl;
    }

    return 0;
}

#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;

    int matrix[n][n];
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> matrix[i][j];
        }
    }

    bool isPerfect = true;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (matrix[i][j] != matrix[j][i]) {
                isPerfect = false;
                break;
            }
        }
        if (!isPerfect) break;
    }

    if (isPerfect) {
        cout << "Perfect." << endl;
    } else {
        cout << "Not perfect." << endl;
    }

    return 0;
}

#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;

    int matrix[n][n];
    
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> matrix[i][j];
        }
    }

    for (int i = 0; i < n; i++) {
        int maxVal = matrix[i][0];
        for (int j = 1; j < n; j++) {
            if (matrix[i][j] > maxVal) {
                maxVal = matrix[i][j];
            }
        }
        for (int j = 0; j < n; j++) {
            matrix[i][j] = maxVal;
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << matrix[i][j];
            if (j < n - 1) cout << " ";
        }
        cout << endl;
    }

    return 0;
}

#include <iostream>
#include <cmath>
using namespace std;
int main(){
    int n, m, count=0;
    cin>>n>>m;
    char arr[8][8];
    if (n>=0 && n<=7 && m>=0 && m<=7){
        
        for (int i=0; i<8; i++){
            for (int j=0; j<8; j++){
                arr[i][j]='*';
            if(i==n||j==m){
                arr[i][j]=char(50);
            }
            else if(abs(i-n)==abs(j-m)){
                arr[i][j]=char(50);
            }

            }
        }
        arr[n][m]=char(49);
        for (int i=0; i<8; i++){
            for (int j=0; j<8; j++){
                cout<<arr[i][j]<<' ';
            }
            cout<<endl;
        }
    }
    else{
        cout<<"Impossible";
    }
  
}

#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int main () {
    int n, m;
    cin>>n >> m;
    int max = -2147483647;
    int row_sum = 0;
    int a[n][m];
    for(int i = 0; i < n; i++)
    {
        for(int j = 0; j  < m; j++){
            cin>>a[i][j];
            row_sum += a[i][j];
        }
        if(max < row_sum)
            max = row_sum;
        row_sum = 0;
    }
    printf("%i", max);
}

#include <iostream>
#include <cmath>

using namespace std;

int main() {
    long long n;
    cin >> n;
    if (n % 2 == 0){
        for (int i = 0; i < n; i++){
            for (int j = 0; j < i + 1; j++){
                cout << "#";
            }
            for (int j = 0; j < n - i - 1; j++){
                cout << '.';
            }
            cout << '\n';
        }
    } else {
        for (int i = 0; i < n; i++){
            for (int j = 0; j < n - i - 1; j++){
                cout << ".";
            }
            for (int j = 0; j < i + 1; j++){
                cout << '#';
            }
            cout << '\n';
        }
    }
    return 0;
}

#include <iostream>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    
    int matrix[50][50];
    
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> matrix[i][j];
        }
    }

    for (int j = 0; j < m; j++) {
        for (int i = 0; i < n; i++) {
            cout << matrix[i][j];
            if (i < n - 1) cout << " ";
        }
        cout << endl;
    }

    return 0;
}

#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n - i - 1; j++) cout << ".";
        for (int j = 0; j < 2 * i + 1; j++) cout << "*";
        for (int j = 0; j < n - i - 1; j++) cout << ".";
        cout << endl;
    }

    return 0;
}

#include <iostream>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;

    int matrix[10][10];
    int min_sum = 1e9, min_index = -1;

    for (int i = 0; i < n; i++) {
        int sum = 0;
        for (int j = 0; j < m; j++) {
            cin >> matrix[i][j];
            sum += matrix[i][j];
        }
        if (sum < min_sum) {
            min_sum = sum;
            min_index = i + 1;
        }
    }

    cout << min_index << endl;

    return 0;
}

#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    
    for (int i = 1; i <= n; i++) {
        int odd = 2 * i - 1;
        for (int j = 1; j <= n; j++) {
            cout << odd;
            if (j < n) cout << " ";
        }
        cout << endl;
    }

    return 0;
}

#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    
    int matrix[50][50];
    int max_value = -1e9, max_row = -1, max_col = -1;
    
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> matrix[i][j];
            if (i == j && matrix[i][j] > max_value) {
                max_value = matrix[i][j];
                max_row = i + 1;
                max_col = j + 1;
            }
        }
    }

    cout << "Maximum element is: " << max_value << " with coordinates: " << max_row << ";" << max_col << endl;
    
    return 0;
}

#include <iostream>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;

    int matrix[50][50];
    int sum = 0;

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> matrix[i][j];
        }
    }

    cout << "coordinates of min elements: " << endl;
    for (int j = 0; j < m; j++) {
        int min_value = matrix[0][j];
        int min_row = 1;
        for (int i = 1; i < n; i++) {
            if (matrix[i][j] < min_value) {
                min_value = matrix[i][j];
                min_row = i + 1;
            }
        }
        cout << min_row << ";" << j + 1 << endl;
        sum += min_value;
    }

    cout << "\nTheir sum:\n" << sum << endl;

    return 0;
}


#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (i == 0 && j == 0) {
                cout << "0";
            } else if (i == 0) {
                cout << j;
            } else if (j == 0) {
                cout << i;
            } else {
                cout << (i * j);
            }
            if (j < n - 1) cout << " ";
        }
        cout << endl;
    }

    return 0;
}


#include <iostream>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    int count = 0;

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            int value;
            cin >> value;
            if (value < 0) {
                count++;
            }
        }
    }

    cout << count << endl;
    return 0;
}

?!, [18.10.2024 0:34]
Q

?!, [18.10.2024 0:34]
#include <iostream>
#include <cmath>
using namespace std;

int main() {
    long long n, m;
    cin >> n >> m;
    long long value;

    for (long long i = 0; i < n; i++) {
        for (long long j = 0; j < m; j++) {
            cin >> value;
            long long root = sqrt(value);
            if (root * root == value) {
                cout << root;
            } else {
                cout << value;
            }
            if (j < m - 1) cout << " ";
        }
        cout << endl;
    }

    return 0;
}

 
#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;

    int max_value = -1000000001;
    int max_row = 0, max_col = 0;
    
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            int value;
            cin >> value;
            if (value > max_value) {
                max_value = value;
                max_row = i + 1;
                max_col = j + 1;
            }
        }
    }

    cout << max_row << " " << max_col << endl;
    return 0;
}


#include <iostream>
using namespace std;

int main() {
    int n, m;
    cin >> n >> m;
    
    int matrix[100][100];
    
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> matrix[i][j];
        }
    }

    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < m - 1; j++) {
            if ((matrix[i][j] == matrix[i][j + 1]) && 
                (matrix[i][j] == matrix[i + 1][j]) && 
                (matrix[i][j] == matrix[i + 1][j + 1])) {
                cout << "NO" << endl;
                return 0;
            }
        }
    }

    cout << "YES" << endl;
    return 0;
}

#include <iostream>
#include <vector>
#include <iomanip>

using namespace std;

int main() {
    int n;
    cin >> n;
    vector<vector<int>> matrix(n, vector<int>(n));
    
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> matrix[i][j];
        }
    }

    int sum = 0;

    for (int i = 1; i < n - 1; i++) {
        for (int j = 1; j < n - 1; j++) {
            if (i != j && i + j != n - 1) {
                sum += matrix[i][j];
            }
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (i == 0  i == n - 1  j == 0  j == n - 1  i == j || i + j == n - 1) {
                cout << setw(3) << "*";
            } else {
                cout << setw(3) << matrix[i][j];
            }
        }
        cout << endl;
    }

    cout << sum << endl;

    return 0;
}

?!, [18.10.2024 0:35]
#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;

    for (int num = 2; num <= n; num++) {
        bool isPrime = true;
        for (int i = 2; i * i <= num; i++) {
            if (num % i == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            cout << num << " is prime" << endl;
        }
    }

    return 0;
}

?!, [18.10.2024 0:35]
#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    int sum = 0;
    int matrix[n][n];

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> matrix[i][j];
        }
    }

    for (int i = 0; i < n; i++) {
        sum += matrix[i][n - 1 - i];
    }

    cout << sum << endl;
    return 0;
}

?!, [18.10.2024 0:35]
#include <iostream>
#include <set>
using namespace std;

int main() {
    int n;
    cin >> n;
    set<int> uniqueElements;
    int matrix[n][n];

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> matrix[i][j];
            uniqueElements.insert(matrix[i][j]);
        }
    }

    if (uniqueElements.size() < 2) {
        cout << 0 << endl;
    } else {
        auto it = uniqueElements.end();
        it--;
        it--;
        cout << *it << endl;
    }

    return 0;
}

?!, [18.10.2024 0:35]
#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    int matrix[n][n];
    int left = 0, right = n - 1, top = 0, bottom = n - 1;
    int num = 1;

    while (left <= right && top <= bottom) {
        for (int i = left; i <= right; i++) {
            matrix[top][i] = num++;
        }
        top++;

        for (int i = top; i <= bottom; i++) {
            matrix[i][right] = num++;
        }
        right--;

        if (top <= bottom) {
            for (int i = right; i >= left; i--) {
                matrix[bottom][i] = num++;
            }
            bottom--;
        }

        if (left <= right) {
            for (int i = bottom; i >= top; i--) {
                matrix[i][left] = num++;
            }
            left++;
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}

?!, [18.10.2024 0:36]
#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;

    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= i; j++) {
            cout << "[*]";
        }
        cout << endl;
    }

    return 0;
}